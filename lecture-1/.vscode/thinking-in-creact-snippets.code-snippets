{
  // Place your lectures workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Create Container Component": {
    "scope": "javascript,typescript",
    "prefix": "containerc",
    "body": [
      "const Container = ({children}) => <div className={''}>{children}</div>"
    ]
  },

  "Create Row Component": {
    "scope": "javascript,typescript",
    "prefix": "rowc",
    "body": ["const Row = ({children}) => <div className={''}>{children}</div>"]
  },

  "Create Card Component": {
    "scope": "javascript,typescript",
    "prefix": "cardc",
    "body": [
      "const Card = () => <div className={''}><Header /><Content /></div>"
    ]
  },

  "Create Header Component": {
    "scope": "javascript,typescript",
    "prefix": "headerc",
    "body": ["const Header = () => <div className={''}></div>"]
  },

  "Create Content Component": {
    "scope": "javascript,typescript",
    "prefix": "contentc",
    "body": [
      "class Content extends React.Component {",
      "  state = { topText: '', bottomText: '', url: '', image: '', showUrl: false };",
      "",
      "  render() {",
      "    return null",
      "  }",
      "}"
    ]
  },

  "Create Change Handler": {
    "scope": "javascript,typescript",
    "prefix": "handlerf",
    "body": ["$1 = ($2) => {", "  $3", "}"]
  },

  "Create Meme Component": {
    "scope": "javascript,typescript",
    "prefix": "memec",
    "body": [
      "const Meme = ({ topText, bottomText, img }) => (",
      "<div className={''}>",
      "<div className={''}>{topText}</div>",
      "<div className={''}>{bottomText}</div>",
      "<img src={img} alt=\"meme\" className={''} />",
      "</div>",
      ");"
    ]
  }
}
